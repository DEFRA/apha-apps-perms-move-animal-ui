name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-22.04
    env:
      UPLOADER_URL: 'http://localhost:7337'
      FILE_S3_BUCKET: 'apha'
      FILE_S3_PATH: 'biosecurity-map'
      CONSUMER_BUCKETS: 'apha'
      MOCK_VIRUS_SCAN_ENABLED: false
      AWS_REGION: eu-west-2
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      GATEWAY_ID: ${{ secrets.GATEWAY_ID }}
      GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run template check
        run: ./template-check.sh
        shell: bash

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: |
          npm ci
          npm audit --omit=dev
          npm run build
          npm run format:check
          npm run lint
          npm test -- --changedSince="origin/${{ github.base_ref }}"

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pr-validator:
    name: Run Journey Tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        test-suite:
          - user-journey-test
          - exotics-journey-test
          - fmd-journey-test
    env:
      UPLOADER_URL: 'http://localhost:7337'
      FILE_S3_BUCKET: 'apha'
      FILE_S3_PATH: 'biosecurity-map'
      CONSUMER_BUCKETS: 'apha'
      MOCK_VIRUS_SCAN_ENABLED: false
      AWS_REGION: eu-west-2
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      GATEWAY_ID: ${{ secrets.GATEWAY_ID }}
      GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}
      DEFRA_ID_ENABLED: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          npm ci
          npm audit --omit=dev
          npm run build

      - name: Start docker compose
        env:
          DEFRA_ID_CLIENT_SECRET: ${{ secrets.DEFRA_ID_CLIENT_SECRET }}
          DEFRA_ID_ENABLED: false
        run: docker compose up --wait-timeout 300 -d --quiet-pull

      - name: Run ${{ matrix.test-suite }}
        run: npm run ${{ matrix.test-suite }}

      - name: Upload allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.test-suite }}
          path: ./allure-report

      - name: Upload docker compose logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-logs-${{ matrix.test-suite }}
          path: ./logs.txt

      - name: Cleanup
        if: always()
        run: docker compose down