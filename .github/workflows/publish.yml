name: Publish

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  AWS_REGION: eu-west-2
  AWS_ACCOUNT_ID: '094954420758'

concurrency:
  group: publish-main

jobs:
  build:
    if: github.run_number != 1
    name: CDP-build-workflow
    env:
      GATEWAY_ID: ${{ secrets.GATEWAY_ID }}
      GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}
      DEFRA_ID_ENABLED: false
      
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          npm ci
          npm audit --omit=dev
          npm run build
          npm run format:check
          npm run lint
          npm run test -- --projects jest-projects/core.js
          npm run test -- --projects jest-projects/fmd.js
          npm run test -- --projects jest-projects/exotics.js
          npm run test -- --projects jest-projects/tb.js

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Start docker compose
        env:
          GATEWAY_ID: ${{ secrets.GATEWAY_ID }}
          GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}
          DEFRA_ID_CLIENT_SECRET: ${{ secrets.DEFRA_ID_CLIENT_SECRET }}
          DEFRA_ID_ENABLED: false
          SEND_TO_CASE_MANAGEMENT_ENABLED: false
        run: |
          docker compose up --wait-timeout 300 -d --quiet-pull

      - name: Journey tests
        run: |
          npm run user-journey-test

      - name: cleanup
        if: always()
        run: docker compose down

      - name: Build and Publish
        uses: DEFRA/cdp-build-action/build@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
