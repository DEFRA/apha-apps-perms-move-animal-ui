import { describePageSnapshot } from '~/src/server/common/test-helpers/snapshot-page.js'
import { Answer, {{camelCase questionKey}}Page } from './index.js'
import { {{pascalCase questionType}}Answer } from '~/src/server/common/model/answer/{{questionType}}/{{questionType}}.js'

// TEMPLATE-TODO: import next page

const sectionKey = '{{camelCase sectionKey}}'
const questionKey = '{{questionKey}}'
const pageUrl = '{{path}}'
const page = {{camelCase questionKey}}Page

const payload = {
  [questionKey]: 'some text'
}

describe('Answer', () => {
  it('should be a {{sentenceCase questionType}} input', () => {
    expect(new Answer(payload)).toBeInstanceOf({{pascalCase questionType}}Answer)
  })

  it('should have the right payload key', () => {
    expect(Answer.config.payloadKey).toBe(questionKey)
  })

  // TEMPLATE-TODO: test the config
})

describe('EnterWhatIsMovingDescriptionPage', () => {
  it('should have the correct urlPath', () => {
    expect(page.urlPath).toBe(pageUrl)
  })

  it('should have the correct sectionKey', () => {
    expect(page.sectionKey).toBe(sectionKey)
  })

  it('should have the correct questionKey', () => {
    expect(page.questionKey).toBe(questionKey)
  })

  it('should have the correct Answer model', () => {
    expect(page.Answer).toBe(Answer)
  })

  describe('nextPage', () => {
    it('should return EnterWhatIsMovingDescriptionPage for any value', () => {
      const answer = new Answer(payload)
      const nextPage = page.nextPage(answer)
      // TEMPLATE-TODO: replace with actual next page
      // expect(nextPage).toBeInstanceOf(...)
    })
  })

  describePageSnapshot({
    describes: 'content',
    it: 'should render expected response and content',
    pageUrl
  })
})
